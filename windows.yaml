---
variables:
    iso_url: '{{env `ISO_URL`}}'
    iso_checksum: '{{env `ISO_CHECKSUM`}}'
    memory: '{{env `MEMORY`}}'
    guest_os_type: '{{env `GUEST_OS_TYPE`}}'
    unattended: '{{env `UNATTENDED`}}'
    setupwinrm: '{{env `SETUPWINRM`}}'
    rgldir: '{{env `RGLDIR`}}'
builders:
  - name:
    type: virtualbox-iso
    guest_os_type: '{{user `guest_os_type`}}'
    guest_additions_mode: attach
    guest_additions_interface: sata
    # headless: '{{user `headless`}}
    # cpus: '{{user `cpus`}}'
    memory: '{{user `memory`}}'
    vboxmanage:
      - [ storagectl, '{{.Name}}', --name, IDE Controller, --remove ]
      # # - [ storagectl, '{{.Name}}', --name, SCSI Controller, --controller, VirtIO ]
      # - [ storagectl, '{{.Name}}', --name, SCSI Controller, --add, scsi ]
      # # - [ storagectl, '{{.Name}}', --add, scsi, --name, BusLogic SCSI Controller, --controller, BusLogic ]
      # - [ storagectl, '{{.Name}}', --name, SAS Controller, --add, sas ]
      # - [ storagectl, '{{.Name}}', --name, VirtIO Controller, --add, virtio ]
      - [ modifyvm, '{{.Name}}', --vrde, off ]
      - [ modifyvm, '{{.Name}}', --graphicscontroller, vboxsvga ] # this or vboxvga vmsvga breaks guest additions install
      - [ modifyvm, '{{.Name}}', --vram, 128 ]
      - [ modifyvm, '{{.Name}}', --chipset, ich9 ]
      - [ modifyvm, '{{.Name}}', --nested-hw-virt, on ]
      - [ modifyvm, '{{.Name}}', --clipboard-mode, bidirectional ]
      - [ modifyvm, '{{.Name}}', --draganddrop, bidirectional ]
      - [ modifyvm, '{{.Name}}', --nictype1, 82540EM ]
      - [ modifyvm, '{{.Name}}', --nictype2, 82540EM ]
      - [ modifyvm, '{{.Name}}', --nictype3, 82540EM ]
      - [ modifyvm, '{{.Name}}', --nictype4, 82540EM ]
    # disk_size: '{{user `disk_size`}}
    hard_drive_interface: sata
    iso_interface: sata
    iso_url: '{{user `iso_url`}}'
    iso_checksum: '{{user `iso_checksum`}}'
    communicator: winrm
    winrm_username: vagrant
    winrm_password: vagrant
    winrm_timeout: 15m
    shutdown_command: shutdown /s /t 0 /f /d p:4:1 /c "Packer Shutdown"
    floppy_files:
      - '{{user `unattended`}}'
      - '{{user `setupwinrm`}}'
    format: ova
    export_opts: [ --manifest, --ovf20 ]
    usb: true

provisioners:
  - type: powershell
    script: '{{user `rgldir`}}/disable-windows-updates.ps1'
  - type: powershell
    inline: Uninstall-WindowsFeature Windows-Defender
  - type: powershell # Disable if we're not using virtualbox shared folders
    script: '{{user `rgldir`}}/virtualbox-prevent-vboxsrv-resolution-delay.ps1'
  - type: windows-restart
  - type: powershell # Guest additional provisioner
    script: 'provision.ps1'
  - type: windows-update # https://github.com/rgl/packer-provisioner-windows-update
  - type: powershell # Enable remote desktop
    script: '{{user `rgldir`}}/enable-remote-desktop.ps1'
  - type: powershell # Enable ssh for rsync folders
    script: '{{user `rgldir`}}/provision-openssh.ps1'
  - type: windows-restart
  # - type: powershell # Cloudbase init which neesd some education
  #   script: '{{user `rgldir`}}/provision-cloudbase-init.ps1'
  - type: powershell # Eject everything
    script: '{{user `rgldir`}}/eject-media.ps1'
  - type: powershell
    script: '{{user `rgldir`}}/optimize.ps1'
